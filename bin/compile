#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
# set -x          # enable debugging

build_dir=$1
cache_dir=$2
env_dir=$3
buildpack_dir=$(cd $(dirname $0); cd ..; pwd)

# Load some convenience functions like status(), echo(), and indent()
source $buildpack_dir/bin/common.sh

export_env_dir $env_dir
build_env=${EMBER_ENV:-production}

mkdir -p $build_dir/vendor
status "Downloading and installing node"
status $build_dir
node_version=0.10.30
node_url=http://s3pository.heroku.com/node/v$node_version/node-v$node_version-linux-x64.tar.gz
curl $node_url -s -o - | tar xzf - -C $build_dir
mv $build_dir/node-v$node_version-linux-x64 $build_dir/vendor/node
chmod +x $build_dir/vendor/node/bin/*
PATH=$build_dir/vendor/node/bin:$PATH

status "Downloading and installing nginx"
nginx_url=http://www.brettwhitelaw.com/pkg/nginx-1.6.0.tar.gz
curl $nginx_url -s -o - | tar xzf - -C $build_dir/vendor

status "Adding boot script"
cp $buildpack_dir/bin/boot.sh $build_dir

status "Copying configs"
mkdir -p $build_dir/config
cp $buildpack_dir/config/mime.types $build_dir/config
if [[ ! -f $build_dir/config/nginx.conf.erb ]]; then
  cp $buildpack_dir/config/nginx.conf.erb $build_dir/config
else
  status "Custom nginx config found"
fi

cd $build_dir


# install compass ---
status "Installing Gems"
export GEM_HOME=$build_dir/.gem/ruby/1.9.1
PATH="$GEM_HOME/bin:$PATH"
if test -d $cache_dir/ruby/.gem; then
  status "Restoring ruby gems directory from cache"
  cp -r $cache_dir/ruby/.gem $build_dir
  HOME=$build_dir gem update bundler --user-install --no-rdoc --no-ri
  HOME=$build_dir bundle update
  # HOME=$build_dir gem update compass --user-install --no-rdoc --no-ri
else
  HOME=$build_dir gem install bundler --user-install --no-rdoc --no-ri
  HOME=$build_dir bundle install
  # HOME=$build_dir gem install compass --user-install --no-rdoc --no-ri
fi

# cache ruby gems compass
rm -rf $cache_dir/ruby
mkdir -p $cache_dir/ruby

# If app has a gems directory, cache it.
if test -d $build_dir/.gem; then
  status "Caching ruby gems directory for future builds"
  cp -r $build_dir/.gem $cache_dir/ruby
fi

status "Building runtime environment"
mkdir -p $build_dir/.profile.d
echo "export PATH=\"\$HOME/vendor/node/bin:\$HOME/bin:\$HOME/node_modules/.bin:\$PATH\";" > $build_dir/.profile.d/nodejs.sh
echo "export PATH=\"\$HOME/.gem/ruby/1.9.1/bin:\$PATH\"" > $build_dir/.profile.d/ruby.sh

# ---------------------

status "Installing dependencies"
trap cat_npm_debug_log ERR # Output npm debug info on error
npm install bower --quiet | indent
npm install --quiet | indent

status "Building Ember CLI application $build_env distribution"
status "1"
node_modules/.bin/bower install --quiet | indent
status "2"
status $build_env
node_modules/ember-cli/bin/ember build --environment $build_env | indent
status "3"
